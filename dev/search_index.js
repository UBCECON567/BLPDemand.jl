var documenterSearchIndex = {"docs":
[{"location":"#BLPDemand.jl-1","page":"Home","title":"BLPDemand.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [BLPDemand]","category":"page"},{"location":"#BLPDemand.delta-Tuple{AbstractArray{T,1} where T,AbstractArray{T,2} where T,AbstractArray{T,2} where T,AbstractArray{T,1} where T}","page":"Home","title":"BLPDemand.delta","text":"function delta(s, x, ν, σ;                 tol=sqrt(eps(eltype(s))), maxiter=1000)\n\nSolves for δ in s = share(δ, ...) using contraction mapping iteration.\n\nSee also: share\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.demandmoments-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,2} where T,Any,Any,Any}","page":"Home","title":"BLPDemand.demandmoments","text":"function demandmoments(β::AbstractVector,σ::AbstractVector,\n                       s::AbstractMatrix, \n                       x, ν, ivdemand)\n\nDemand side moments in BLP model. \n\nArguments\n\nβ length K (=number characteristics) vector of average tastes for characteristics\nσ length K vector of standard deviations of tastes\ns J × T matrix of market shares\nx K × J × T array of product characteristics\nν K × S × T array of draws of ν\nivdemand L × J × T array of instruments. Identification requries L ≥ K.\n\nReturns L × J array of moments.\n\nSee also: share, delta, simulateRCIVlogit\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.dsharedp-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,2} where T,AbstractArray{T,2} where T,AbstractArray{T,1} where T}","page":"Home","title":"BLPDemand.dsharedp","text":"function dsharedp(β::AbstractVector,\n              σ::AbstractVector,\n              p::AbstractVector,\n              x::AbstractMatrix,\n              ν::AbstractMatrix,\n              ξ::AbstractVector)\n\nCompute market shares and their derivatives in BLP random coefficients demand model.\n\nSee sharep for argument details.\n\nReturns\n\ns vector J market shares\nds J × J Jacobian matrix with ds[l,j] = ∂s[l]/∂p[j]\nΛ J × J diagonal matrix with ds = Λ - Γ\nΓ J × J matrix \n\nSee eqprices for usage of Λ and Γ.    \n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.eqprices-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,1} where T,Any,Any}","page":"Home","title":"BLPDemand.eqprices","text":"function eqprices(mc::AbstractVector,\n                  β::AbstractVector, σ::AbstractVector,\n                  ξ::AbstractVector,\n                  x, ν;\n                  firmid= 1:length(mc),\n                  tol=sqrt(eps(eltype(mc))),\n                  maxiter=10000)\n\nCompute equilibrium prices in BLP model using ζ contraction method of Morrow & Skerlos (2011). \n\nArguments\n\nmc vector of J marginal costs\nβ vector of K taste coefficients\nσ vector of K taste standard deviations\nξ vector of J demand shocks\nx (K-1) × J exogenous product characteristics\nν K × S × T array of draws of ν\nfirmid= (1:J) .* fill(1, T)' identifier of firm producing each good. Default value assumes each good is produced by a different firm. \ntol convergence tolerance\nmaxiter maximum number of iterations.\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.share-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,2} where T,AbstractArray{T,2} where T}","page":"Home","title":"BLPDemand.share","text":"function share(δ::AbstractVector, σ::AbstractVector, x::AbstractMatrix, ν::AbstractMatrix)\n\nCompute market shares in BLP random coefficients demand model.\n\nMarket shares are given by \n\n s_j = int frace^delta_j + x_j σ ν1+sum_i=1^J e^delta_i + x_i σ ν dF_ν(ν)\n\nArguments:\n\nδ vector of length J= number of products\nσ vector of length K= number of characteristics\nx K × J matrix of product characteristics\nν K × S matrix of simulation draws for integration\n\nReturns vector of length J market shares. \n\nSee also: delta\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.sharep-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,2} where T,AbstractArray{T,2} where T,AbstractArray{T,1} where T}","page":"Home","title":"BLPDemand.sharep","text":"function sharep(β::AbstractVector,                    σ::AbstractVector,                    p::AbstractVector,                    x::AbstractMatrix,                    ν::AbstractMatrix,                    ξ::AbstractVector)\n\nCompute market shares in BLP random coefficients demand model.\n\nMarket shares are given by \n\n s_j = int frace^delta_j + x_j σ ν1+sum_i=1^J e^delta_i + x_i σ ν dF_ν(ν)\n\nwhere \n\ndelta_j = β1*pj + xj *β2end + ξj\n\nArguments:\n\nβ vector of length K= number of characteristics\nσ vector of length K= number of characteristics\np J vector of prices\nx (K-1) × J matrix of exogenous product characteristics\nν K × S matrix of simulation draws for integration\nξ J vector of demand shocks\n\nReturns vector of length J market shares. \n\nSee also: share, dsharedp  \n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.simulateBLP-NTuple{6,Any}","page":"Home","title":"BLPDemand.simulateBLP","text":"function simulateBLP(T, β, σ, γ, S)\n\nSimulates a BLP demand and supply model.\n\nArguments\n\nT::Integer number of markets\nβ::AbstractVector with length(β)=K, average tastes for characteristics. The first characteristic will be endogeneous (price)\nσ::AbstractVector with length(σ)=K, standard deviation of tastes for characteristics\nγ::AbstractVector marginal cost coefficients\nS number of simulation draws to calculate market shares\n\nReturns\n\nx array of product characteristics with size(x) = (K, J, T)\nz array of instruments with size(z) = (L, J, T)\ns matrix of market shares size(s) = (J,T)\nν random draws used to compute market shares, size(ν) = (K,S,T)\nξ market demand shocks, size(ξ) = (J,T)\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.simulateIVRClogit-NTuple{6,Any}","page":"Home","title":"BLPDemand.simulateIVRClogit","text":"function simulateIVRClogit(T, β, σ, π, ρ, S)\n\nSimulates a random coefficients logit model with endogeneity.\n\nArguments\n\nT::Integer number of markets\nβ::AbstractVector with length(β)=K, average tastes for characteristics.\nσ::AbstractVector with length(σ)=K, standard deviation of tastes for characteristics\nπ::AbstractMatrix with size(π) = (L, K, J), first stage coefficients\nρ::Number strength of endogeneity\nS number of simulation draws to calculate market shares\n\nReturns\n\nx array of product characteristics with size(x) = (K, J, T)\nz array of instruments with size(z) = (L, J, T)\ns matrix of market shares size(s) = (J,T)\nν random draws used to compute market shares, size(ν) = (K,S,T)\nξ market demand shocks, size(ξ) = (J,T)\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.supplymoments-Tuple{AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,1} where T,AbstractArray{T,2} where T,Any,Any,Any,Any}","page":"Home","title":"BLPDemand.supplymoments","text":"function supplymoments(γ::AbstractVector, β::AbstractVector, σ::AbstractVector,\n                       ξ::AbstractVector, x, ν, w, ivsupply; \n                       firmid= (1:size(ξ,1)) .* fill(1, size(ξ,2))')\n\nSupply side moments in a BLP model. Assumes that marginal cost is log linear, \n\nc_jt = exp(w_jtγ + ω_jt)\n\nand prices are Bertrand-Nash\n\nc_t = p_t + (sp)^-1 s\n\nwhere ∂s/∂p is the Jacobian of shares with respect to prices, but with the j,l entry set to zero unless goods j and l are produced by the same firm. \n\nArguments\n\nγ marginal cost coefficients\nβ length K (=number characteristics) vector of average tastes for characteristics\nσ length K vector of standard deviations of tastes\nξ J × T matrix of market demand shocks\nx K × J × T array of product characteristics\nν K × S × T array of draws of ν\nw length(γ) × J × T array of cost shifters\nivsupply M × J × T array of instruments. Identification requries M ≥ length(γ).\nfirmid= (1:J) .* fill(1, T)' identifier of firm producing each good. Default value assumes each good is produced by a different firm. \n\nReturns L × J array of moments.\n\n\n\n\n\n","category":"method"},{"location":"#BLPDemand.loadblpdata-Tuple{}","page":"Home","title":"BLPDemand.loadblpdata","text":"function loadblpdata()\n\nLoads data from Berry, Levinsohn, and Pakes (1999).\n\nReturns a DataFrame.\n\n\n\n\n\n","category":"method"}]
}
